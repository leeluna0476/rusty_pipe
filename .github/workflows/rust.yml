name: Rust Targeted Cargo Check

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 변경된 Cargo.toml 또는 .rs 파일 검색
      - name: Get changed Cargo projects
        id: changes
        run: |
          changed_rs_or_cargo=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '(\.rs$|Cargo\.toml)' || true)
          echo "changed_paths<<EOF" >> $GITHUB_OUTPUT
          echo "$changed_rs_or_cargo" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # cargo check을 실행해야 할 디렉터리 찾기
      - name: Run cargo check for changed files
        if: steps.changes.outputs.changed_paths != ''
        run: |
          echo "Changed files:"
          echo "${{ steps.changes.outputs.changed_paths }}"

          # 중복 제거된 crate 루트 디렉터리 목록 생성
          for file in ${{ steps.changes.outputs.changed_paths }}; do
            dir=$(dirname "$file")
            while [ ! -f "$dir/Cargo.toml" ] && [ "$dir" != "." ]; do
              dir=$(dirname "$dir")
            done
            echo "Found crate root: $dir"
            echo "$dir" >> crates_to_check.txt
          done

          # 중복 제거 후 각 crate에서 check 수행
          sort -u crates_to_check.txt | while read crate; do
            echo "Checking $crate"
            (cd "$crate" && cargo check --verbose)
          done

